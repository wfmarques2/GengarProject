// <auto-generated />
using System;
using DijitaruVatigoGengar.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DijitaruVatigoGengar.Migrations
{
    [DbContext(typeof(DijitaruVatigoGengarContext))]
    partial class DijitaruVatigoGengarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DijitaruVatigoGengar.Models.Collaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Gender");

                    b.Property<string>("ModalityText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContractModality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.PendingHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollaboratorId")
                        .HasColumnType("int");

                    b.Property<int>("HourAmount")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterHour")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("CollaboratorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PendingHours");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectType");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.ProjectCollaborator", b =>
                {
                    b.Property<int>("CollaboratorId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("CollaboratorId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectCollaborators");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.PendingHour", b =>
                {
                    b.HasOne("DijitaruVatigoGengar.Models.Collaborator", "Collaborator")
                        .WithMany("PendingHours")
                        .HasForeignKey("CollaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DijitaruVatigoGengar.Models.Project", "Project")
                        .WithMany("PendingHours")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborator");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.ProjectCollaborator", b =>
                {
                    b.HasOne("DijitaruVatigoGengar.Models.Collaborator", "Collaborator")
                        .WithMany("ProjectCollaborators")
                        .HasForeignKey("CollaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DijitaruVatigoGengar.Models.Project", "Project")
                        .WithMany("ProjectCollaborators")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborator");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.Collaborator", b =>
                {
                    b.Navigation("PendingHours");

                    b.Navigation("ProjectCollaborators");
                });

            modelBuilder.Entity("DijitaruVatigoGengar.Models.Project", b =>
                {
                    b.Navigation("PendingHours");

                    b.Navigation("ProjectCollaborators");
                });
#pragma warning restore 612, 618
        }
    }
}
